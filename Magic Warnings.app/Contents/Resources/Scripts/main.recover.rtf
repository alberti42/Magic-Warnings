{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Verdana-Bold;\f1\fnil\fcharset0 Verdana;\f2\fnil\fcharset0 Verdana-Italic;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red108\green5\blue211;\red0\green0\blue255;
\red76\green78\blue78;\red64\green128\blue0;\red0\green22\blue176;\red68\green21\blue176;\red255\green0\blue0;
}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgenericrgb\c42337\c1841\c82833;\csgenericrgb\c0\c0\c100000;
\csgenericrgb\c29999\c30457\c30457;\csgenericrgb\c25000\c50001\c0;\csgenericrgb\c0\c8656\c68986;\csgenericrgb\c26552\c8264\c69162;\csgenericrgb\c100000\c0\c0;
}
\deftab480
\pard\pardeftab480\slleading40\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 use
\f1\b0  \cf3 AppleScript\cf2  \cf4 version\cf2  "2.4" \cf5 -- Yosemite (10.10) or later\cf2 \
\pard\pardeftab480\slleading40\pardirnatural\partightenfactor0

\f0\b \cf2 use
\f1\b0  
\f2\i \cf4 framework
\f1\i0 \cf2  "Foundation"\

\f0\b use
\f1\b0  
\f2\i \cf4 framework
\f1\i0 \cf2  "IOKit"\

\f0\b use
\f1\b0  
\f2\i \cf4 scripting additions
\f1\i0 \cf2 \
\
\cf5 -- Define the properties for easier referencing\cf2 \

\f0\b property
\f1\b0  \cf6 this\cf2  : 
\f0\b a reference
\f1\b0  
\f0\b to
\f1\b0  
\f2\i \cf3 current application
\f1\i0 \cf2 \
\
\cf5 -- Disable warnings before so many hours have passed since the last warning message\cf2 \

\f0\b property
\f1\b0  \cf6 disableWarningBeforeSoManyHoursHavePassed\cf2  : 3\
\
\cf5 -- Define the threshold for battery warnings\cf2 \

\f0\b property
\f1\b0  \cf6 threshold\cf2  : 20\
\
\cf5 -- Path to the file where the dictionary will be saved in the user's ~/Library/Preferences/\cf2 \

\f0\b property
\f1\b0  \cf6 storageFilePath\cf2  : \cf3 POSIX path\cf2  
\f0\b of
\f1\b0  (
\f0\b \cf7 path to
\f1\b0 \cf2  
\f2\i \cf8 library folder
\f1\i0 \cf2  \cf7 from\cf2  
\f2\i \cf8 user domain
\f1\i0 \cf2 ) & "Preferences/org.alberti42.magic-warnings.plist"\
\
\cf5 -- Dictionary to store the last notification time for each device by serial number\cf2 \

\f0\b global
\f1\b0  \cf6 lastNotificationTimes\cf2 \
\

\f0\b on
\f1\b0  
\f0\b \cf4 run
\f1\b0 \cf2 \
	\cf5 -- Load the last notification times from the file (if it exists)\cf2 \
	
\f0\b my
\f1\b0  \cf9 loadNotificationTimes\cf2 ()\
	\
	\cf5 -- Get the list of all devices under AppleDeviceManagementHIDEventService\cf2 \
	
\f0\b set
\f1\b0  \cf6 ioregCmd\cf2  
\f0\b to
\f1\b0  "/usr/sbin/ioreg -c AppleDeviceManagementHIDEventService -r -l"\
	
\f0\b set
\f1\b0  \cf6 ioreg_output\cf2  
\f0\b to
\f1\b0  
\f0\b \cf7 do shell script
\f1\b0 \cf2  \cf6 ioregCmd\cf2 \
	\
	\cf5 -- Split the output into lines\cf2 \
	
\f0\b set
\f1\b0  \cf6 outputLines\cf2  
\f0\b to
\f1\b0  
\f2\i \cf4 paragraphs
\f1\i0 \cf2  
\f0\b of
\f1\b0  \cf6 ioreg_output\cf2 \
	\
	\cf5 -- Initialize variables for processing each device\cf2 \
	
\f0\b set
\f1\b0  \cf6 product_name\cf2  
\f0\b to
\f1\b0  ""\
	
\f0\b set
\f1\b0  \cf6 serial_number\cf2  
\f0\b to
\f1\b0  ""\
	
\f0\b set
\f1\b0  \cf6 battery_percent\cf2  
\f0\b to
\f1\b0  ""\
	\
	
\f0\b repeat
\f1\b0  
\f0\b with
\f1\b0  \cf6 |line|\cf2  
\f0\b in
\f1\b0  \cf6 outputLines\cf2 \
		\cf5 -- Extract the product name\cf2 \
		
\f0\b if
\f1\b0  \cf6 |line|\cf2  
\f0\b contains
\f1\b0  "\\"Product\\"" 
\f0\b then
\f1\b0 \
			
\f0\b set
\f1\b0  \cf6 product_name\cf2  
\f0\b to
\f1\b0  
\f0\b my
\f1\b0  \cf9 extractField\cf2 (\cf6 |line|\cf2 , "Product")\
		
\f0\b end
\f1\b0  
\f0\b if
\f1\b0 \
		\
		\cf5 -- Extract the serial number\cf2 \
		
\f0\b if
\f1\b0  \cf6 |line|\cf2  
\f0\b contains
\f1\b0  "\\"SerialNumber\\"" 
\f0\b then
\f1\b0 \
			
\f0\b set
\f1\b0  \cf6 serial_number\cf2  
\f0\b to
\f1\b0  
\f0\b my
\f1\b0  \cf9 extractField\cf2 (\cf6 |line|\cf2 , "SerialNumber")\
		
\f0\b end
\f1\b0  
\f0\b if
\f1\b0 \
		\
		\cf5 -- Extract the battery percentage\cf2 \
		
\f0\b if
\f1\b0  \cf6 |line|\cf2  
\f0\b contains
\f1\b0  "\\"BatteryPercent\\"" 
\f0\b then
\f1\b0 \
			
\f0\b set
\f1\b0  \cf6 battery_percent\cf2  
\f0\b to
\f1\b0  
\f0\b my
\f1\b0  \cf9 extractField\cf2 (\cf6 |line|\cf2 , "BatteryPercent")\
			
\f0\b set
\f1\b0  \cf6 battery_percent\cf2  
\f0\b to
\f1\b0  
\f0\b my
\f1\b0  \cf9 removeNonDigitCharacters\cf2 (\cf6 battery_percent\cf2 )\
			\
			\cf5 -- If the battery percentage is below the threshold, check if 3 hours have passed since the last notification\cf2 \
			
\f0\b if
\f1\b0  (\cf6 battery_percent\cf2  
\f0\b as
\f1\b0  
\f2\i \cf4 integer
\f1\i0 \cf2 ) < \cf6 threshold\cf2  
\f0\b then
\f1\b0 \
				
\f0\b if
\f1\b0  (\cf6 lastNotificationTimes's\cf2  \cf9 objectForKey\cf2 :\cf6 serial_number\cf2 ) 
\f0\b is
\f1\b0  
\f2\i \cf4 missing value
\f1\i0 \cf2  
\f0\b then
\f1\b0 \
					\cf5 -- notification was recently emitted\cf2 \
					
\f0\b set
\f1\b0  \cf6 notificationMessage\cf2  
\f0\b to
\f1\b0  "Battery status: " & \cf6 battery_percent\cf2  & "%"\
					
\f0\b set
\f1\b0  \cf6 notificationTitle\cf2  
\f0\b to
\f1\b0  \cf6 product_name\cf2  & " battery low"\
					
\f0\b my
\f1\b0  \cf9 showNotification\cf2 (\cf6 notificationMessage\cf2 , \cf6 notificationTitle\cf2 )\
					
\f0\b my
\f1\b0  \cf9 updateLastNotificationTime\cf2 (\cf6 serial_number\cf2 )\
				
\f0\b end
\f1\b0  
\f0\b if
\f1\b0 \
			
\f0\b end
\f1\b0  
\f0\b if
\f1\b0 \
		
\f0\b end
\f1\b0  
\f0\b if
\f1\b0 \
	
\f0\b end
\f1\b0  
\f0\b repeat
\f1\b0 \
	\
	\cf5 -- Save the updated notification times to the file\cf2 \
	
\f0\b my
\f1\b0  \cf9 saveNotificationTimes\cf2 ()\

\f0\b end
\f1\b0  
\f0\b \cf4 run
\f1\b0 \cf2 \
\
\cf5 -- Helper method to extract a field value from a line of text\cf2 \

\f0\b on
\f1\b0  \cf9 extractField\cf2 (\cf6 |line|\cf2 , \cf6 fieldName\cf2 )\
	
\f0\b set
\f1\b0  \cf6 prefix\cf2  
\f0\b to
\f1\b0  "\\"" & \cf6 fieldName\cf2  & "\\" = "\
	
\f0\b set
\f1\b0  \cf6 fieldValue\cf2  
\f0\b to
\f1\b0  
\f2\i \cf4 text
\f1\i0 \cf2  ((
\f0\b \cf7 offset
\f1\b0 \cf2  \cf7 of\cf2  \cf6 prefix\cf2  \cf7 in\cf2  \cf6 |line|\cf2 ) + (\cf3 length\cf2  
\f0\b of
\f1\b0  \cf6 prefix\cf2 )) 
\f0\b thru
\f1\b0  -1 
\f0\b of
\f1\b0  \cf6 |line|\cf2 \
	
\f0\b set
\f1\b0  \cf6 fieldValue\cf2  
\f0\b to
\f1\b0  
\f0\b my
\f1\b0  \cf9 removeQuotes\cf2 (\cf6 fieldValue\cf2 )\
	
\f0\b return
\f1\b0  \cf6 fieldValue\cf2 \

\f0\b end
\f1\b0  \cf9 extractField\cf2 \
\
\cf5 -- Helper method to remove non-digit characters\cf2 \

\f0\b on
\f1\b0  \cf9 removeNonDigitCharacters\cf2 (\cf6 inputString\cf2 )\
	
\f0\b set
\f1\b0  \cf6 NSString\cf2  
\f0\b to
\f1\b0  (\cf6 this's\cf2  \cf6 NSString's\cf2  \cf9 stringWithString\cf2 :\cf6 inputString\cf2 )\
	
\f0\b set
\f1\b0  \cf6 digitsOnly\cf2  
\f0\b to
\f1\b0  (\cf6 NSString's\cf2  \cf9 stringByReplacingOccurrencesOfString\cf2 :"[^0-9]" \cf9 withString\cf2 :"" \cf9 options\cf2 :(\cf6 this's\cf2  \cf6 NSRegularExpressionSearch\cf2 ) \cf9 range\cf2 :\{0, \cf6 NSString's\cf2  \cf9 |length|\cf2 ()\})\
	
\f0\b return
\f1\b0  \cf6 digitsOnly\cf2  
\f0\b as
\f1\b0  
\f2\i \cf4 text
\f1\i0 \cf2 \

\f0\b end
\f1\b0  \cf9 removeNonDigitCharacters\cf2 \
\
\cf5 -- Helper method to remove quotes from a string\cf2 \

\f0\b on
\f1\b0  \cf9 removeQuotes\cf2 (\cf6 inputString\cf2 )\
	
\f0\b set
\f1\b0  \cf6 NSString\cf2  
\f0\b to
\f1\b0  (\cf6 this's\cf2  \cf6 NSString's\cf2  \cf9 stringWithString\cf2 :\cf6 inputString\cf2 )\
	
\f0\b set
\f1\b0  \cf6 resultString\cf2  
\f0\b to
\f1\b0  (\cf6 NSString's\cf2  \cf9 stringByReplacingOccurrencesOfString\cf2 :"\\"" \cf9 withString\cf2 :"")\
	
\f0\b return
\f1\b0  \cf6 resultString\cf2  
\f0\b as
\f1\b0  
\f2\i \cf4 text
\f1\i0 \cf2 \

\f0\b end
\f1\b0  \cf9 removeQuotes\cf2 \
\
\cf5 -- Helper method to update the last notification time\cf2 \

\f0\b on
\f1\b0  \cf9 updateLastNotificationTime\cf2 (\cf6 serial_number\cf2 )\
	
\f0\b set
\f1\b0  \cf6 currentDate\cf2  
\f0\b to
\f1\b0  
\f0\b \cf7 current date
\f1\b0 \cf2 \
	\
	\cf5 -- Set the current date as the value for the serial number key\cf2 \
	\cf6 lastNotificationTimes's\cf2  \cf9 setObject\cf2 :\cf6 currentDate\cf2  \cf9 forKey\cf2 :\cf6 serial_number\cf2 \

\f0\b end
\f1\b0  \cf9 updateLastNotificationTime\cf2 \
\
\cf5 -- Save notification times to a file using NSPropertyListSerialization\cf2 \

\f0\b on
\f1\b0  \cf9 saveNotificationTimes\cf2 ()\
	
\f0\b set
\f1\b0  \cf6 plistData\cf2  
\f0\b to
\f1\b0  
\f2\i \cf3 current application's
\f1\i0 \cf2  \cf6 NSPropertyListSerialization's\cf2  \cf9 dataWithPropertyList\cf2 :\cf6 lastNotificationTimes\cf2  \cf9 format\cf2 :(
\f2\i \cf3 current application's
\f1\i0 \cf2  \cf6 NSPropertyListXMLFormat_v1_0\cf2 ) \cf9 options\cf2 :0 \cf9 |error|\cf2 :(
\f2\i \cf4 missing value
\f1\i0 \cf2 )\
	
\f0\b set
\f1\b0  \cf6 plistData\cf2  
\f0\b to
\f1\b0  \cf6 plistData's\cf2  \cf9 writeToFile\cf2 :\cf6 storageFilePath\cf2  \cf9 atomically\cf2 :
\f2\i \cf3 true
\f1\i0 \cf2 \

\f0\b end
\f1\b0  \cf9 saveNotificationTimes\cf2 \
\
\cf5 -- Load notification times from the file using NSPropertyListSerialization\cf2 \

\f0\b on
\f1\b0  \cf9 loadNotificationTimes\cf2 ()\
	
\f0\b set
\f1\b0  \cf6 fileManager\cf2  
\f0\b to
\f1\b0  
\f2\i \cf3 current application's
\f1\i0 \cf2  \cf6 NSFileManager's\cf2  \cf9 defaultManager\cf2 ()\
	
\f0\b if
\f1\b0  (\cf6 fileManager's\cf2  \cf9 fileExistsAtPath\cf2 :\cf6 storageFilePath\cf2 ) 
\f0\b then
\f1\b0 \
		
\f0\b set
\f1\b0  \cf6 plistData\cf2  
\f0\b to
\f1\b0  
\f2\i \cf3 current application's
\f1\i0 \cf2  \cf6 NSData's\cf2  \cf9 dataWithContentsOfFile\cf2 :\cf6 storageFilePath\cf2 \
		
\f0\b set
\f1\b0  \{\cf6 loadedNotificationTimes\cf2 , \cf6 theError\cf2 \} 
\f0\b to
\f1\b0  
\f2\i \cf3 current application's
\f1\i0 \cf2  \cf6 NSPropertyListSerialization's\cf2  \cf9 propertyListWithData\cf2 :\cf6 plistData\cf2  \cf9 options\cf2 :0 \cf9 format\cf2 :(
\f2\i \cf4 missing value
\f1\i0 \cf2 ) \cf9 |error|\cf2 :(
\f2\i \cf4 reference
\f1\i0 \cf2 )\
		
\f0\b if
\f1\b0  \cf6 loadedNotificationTimes\cf2  
\f0\b is
\f1\b0  
\f0\b not
\f1\b0  
\f2\i \cf4 missing value
\f1\i0 \cf2  
\f0\b then
\f1\b0 \
			
\f0\b set
\f1\b0  \cf6 lastNotificationTimes\cf2  
\f0\b to
\f1\b0  \cf6 loadedNotificationTimes's\cf2  \cf9 mutableCopy\cf2 ()\
			\
			\cf5 -- Clean the last records in case they have already expired\cf2 \
			
\f0\b set
\f1\b0  \cf6 currentDate\cf2  
\f0\b to
\f1\b0  
\f0\b \cf7 current date
\f1\b0 \cf2 \
			
\f0\b repeat
\f1\b0  
\f0\b with
\f1\b0  \cf6 serial_number\cf2  
\f0\b in
\f1\b0  ((\cf6 lastNotificationTimes's\cf2  \cf9 allKeys\cf2 ()) 
\f0\b as
\f1\b0  
\f2\i \cf4 list
\f1\i0 \cf2 )\
				
\f0\b set
\f1\b0  \cf6 notificationTime\cf2  
\f0\b to
\f1\b0  (\cf6 lastNotificationTimes's\cf2  \cf9 objectForKey\cf2 :\cf6 serial_number\cf2 )\
				
\f0\b if
\f1\b0  \cf6 notificationTime\cf2  
\f0\b is
\f1\b0  
\f0\b not
\f1\b0  
\f2\i \cf4 missing value
\f1\i0 \cf2  
\f0\b then
\f1\b0 \
					
\f0\b if
\f1\b0  (\cf6 currentDate\cf2  - \cf6 notificationTime\cf2 ) > (\cf6 disableWarningBeforeSoManyHoursHavePassed\cf2  * \cf3 hours\cf2 ) 
\f0\b then
\f1\b0 \
						\cf5 -- More than X hours have passed, the last notification time has expired, and we can drop it\cf2 \
						(\cf6 lastNotificationTimes's\cf2  \cf9 removeObjectForKey\cf2 :\cf6 serial_number\cf2 )\
					
\f0\b end
\f1\b0  
\f0\b if
\f1\b0 \
				
\f0\b end
\f1\b0  
\f0\b if
\f1\b0 \
			
\f0\b end
\f1\b0  
\f0\b repeat
\f1\b0 \
		
\f0\b else
\f1\b0 \
			
\f0\b set
\f1\b0  \cf6 lastNotificationTimes\cf2  
\f0\b to
\f1\b0  
\f2\i \cf3 current application's
\f1\i0 \cf2  \cf6 NSMutableDictionary's\cf2  \cf9 dictionary\cf2 ()\
		
\f0\b end
\f1\b0  
\f0\b if
\f1\b0 \
	
\f0\b else
\f1\b0 \
		
\f0\b set
\f1\b0  \cf6 lastNotificationTimes\cf2  
\f0\b to
\f1\b0  
\f2\i \cf3 current application's
\f1\i0 \cf2  \cf6 NSMutableDictionary's\cf2  \cf9 dictionary\cf2 ()\
	
\f0\b end
\f1\b0  
\f0\b if
\f1\b0 \

\f0\b end
\f1\b0  \cf9 loadNotificationTimes\cf2 \
\
\cf5 -- Native AppleScript method to display a notification\cf2 \

\f0\b on
\f1\b0  \cf9 showNotification\cf2 (\cf6 message\cf2 , \cf6 title\cf2 )\
	
\f0\b \cf7 display notification
\f1\b0 \cf2  \cf6 message\cf2  \cf7 with title\cf2  \cf6 title\cf2 \

\f0\b end
\f1\b0  \cf9 showNotification\cf2 \
}